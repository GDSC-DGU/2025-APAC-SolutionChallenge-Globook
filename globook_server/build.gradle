plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'org.gdsc'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springGrpcVersion', "0.8.0")
}

dependencies {
	// gRPC
	implementation 'io.grpc:grpc-services'
	implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
	implementation 'com.google.protobuf:protobuf-java:3.25.3'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.mysql:mysql-connector-j'

	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Development Tools
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// Lombok
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// Google Cloud Platform Storage
	implementation 'com.google.cloud:google-cloud-storage:2.52.1'
	implementation 'com.google.cloud:google-cloud-storage-control:2.52.1'

	// Google TTS 라이브러리
	implementation 'com.google.cloud:google-cloud-texttospeech:2.19.0'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'org.reactivestreams:reactive-streams:1.0.4'
	implementation 'org.springframework:spring-test:6.0.12'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.grpc:spring-grpc-dependencies:${springGrpcVersion}"
	}
}

protobuf {
	protoc {
		artifact = 'com.google.protobuf:protoc:3.25.3'
	}
	plugins {
		grpc {
			artifact = 'io.grpc:protoc-gen-grpc-java:1.55.3'
		}
	}
	generateProtoTasks {
		all()*.plugins {
			grpc {
				option 'jakarta_omit'
				option '@generated=omit'
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
